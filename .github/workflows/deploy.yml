name: Deploy to Digital Ocean Droplet

on:
  push:
    branches: [main, master]
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        default: "production"
        type: choice
        options:
          - production
          - staging

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests (if any)
        run: |
          # Add your test commands here if you have tests
          echo "Running tests..."
          # npm test

      - name: Build application
        run: npm run build

      - name: Deploy to Digital Ocean Droplet
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          port: ${{ secrets.DROPLET_PORT || 22 }}
          script: |
            # Navigate to app directory
            cd /var/www/cratematch

            # Pull latest changes
            git pull origin main

            # Install dependencies
            npm ci --production

            # Copy public files
            npm run postinstall

            # Restart the application
            pm2 restart cratematch

            # Check if restart was successful
            if pm2 list | grep -q "cratematch.*online"; then
              echo "‚úÖ Deployment successful! Application is running."
              pm2 status
            else
              echo "‚ùå Deployment failed! Application is not running."
              pm2 logs cratematch --lines 20
              exit 1
            fi

      - name: Verify deployment
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          port: ${{ secrets.DROPLET_PORT || 22 }}
          script: |
            # Check if the application is responding
            sleep 5
            if curl -f http://localhost:3000/health || curl -f http://localhost:3000/; then
              echo "‚úÖ Application is responding correctly"
            else
              echo "‚ùå Application is not responding"
              pm2 logs cratematch --lines 10
              exit 1
            fi

      - name: Notify deployment status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "üéâ Deployment completed successfully!"
            echo "üåê Your app is live at: http://${{ secrets.DROPLET_HOST }}"
          else
            echo "‚ùå Deployment failed!"
          fi
